name: Dashboard App CI Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run_tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: data_handler
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        volumes: ${{ github.workspace }}/postgres-data:/var/lib/postgresql/data

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev python3-dev

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install project dependencies
        working-directory: ./apps/dashboard_app
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-root
          poetry run python -m pip install psycopg2-binary

      - name: Configure environment
        working-directory: ./apps/dashboard_app
        run: |
          echo "DATABASE_URL=postgresql://postgres:password@localhost:5432/data_handler" > .env
          echo "DEBUG=False" >> .env

      - name: Wait for database
        run: |
          for i in {1..15}; do
            pg_isready -h 127.0.0.1 -p 5432 -U postgres && \
            psql -h 127.0.0.1 -U postgres -d data_handler -c "SELECT 1" && break
            sleep 2
          done

      - name: Run database migrations
        working-directory: ./apps/dashboard_app
        run: |
          poetry run python manage.py migrate --noinput

      - name: Run tests with coverage
        working-directory: ./apps/dashboard_app
        run: |
          poetry run pytest -v --cov=. --cov-report=xml
